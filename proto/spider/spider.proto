syntax = "proto3";

service Spider {
	rpc TrackSitemap(TrackSitemapRequest) returns (TrackSitemapResponse) {}
	rpc FetchDataset(FetchDatasetRequest) returns (FetchDatasetResponse) {}
	rpc PrepareDatasets(PrepareDatasetsRequest) returns (PrepareDatasetsResponse) {} 
	rpc FetchPages(FetchPagesRequest) returns (FetchPagesResponse) {}
	// rpc Update(UpdateRequest) returns (UpdateResponse) {}
	// rpc Delete(DeleteRequest) returns (DeleteResponse) {}
	// rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse) {}
	// rpc Login(LoginRequest) returns (LoginResponse) {}
	// rpc Logout(LogoutRequest) returns (LogoutResponse) {}
	// rpc ReadSession(ReadSessionRequest) returns(ReadSessionResponse) {}
}

message Url {
	uint64 id = 1;
	string url = 2;
	string title = 3;
	string group = 4;
	uint64 sitemap_id = 5;
}

message FetchDatasetRequest {
	uint64 id = 1;
	uint64 url_id = 2;
}

message FetchDatasetResponse {
	map<string, string> data = 1;
}

message TrackSitemapRequest {
	string from = 1;
	uint64 depth = 2;
	map<string, string> patterns = 3;
	string name = 4;
}

message TrackSitemapResponse {
	uint64 id = 1;
}

message PrepareDatasetsRequest {
	uint64 selector_id = 1;
	string group = 2;
	repeated string conditions = 3;
}

message PrepareDatasetsResponse {
	uint64 count = 1;
}

message FetchPagesRequest {
	string search = 1;
	string group = 2;
}

message FetchPagesResponse {
	repeated Url results = 1;
}